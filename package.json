{
  "name": "openavatar",
  "version": "0.1.0",
  "private": true,
  "workspaces": [
    "types",
    "assets",
    "contracts",
    "web"
  ],
  "scripts": {
    "art": "yarn workspace @openavatar/types clean && yarn workspace @openavatar/types build && yarn workspace @openavatar/assets clean && yarn workspace @openavatar/assets build && yarn workspace @openavatar/web build && yarn dev",
    "avatars": "yarn workspace @openavatar/contracts format:avatars && yarn workspace @openavatar/contracts deploy:localhost:test && yarn workspace @openavatar/contracts upload:localhost:test && yarn workspace @openavatar/contracts mint:localhost:test && yarn workspace @openavatar/contracts pfps:localhost:test && yarn workspace @openavatar/contracts golive:localhost:test",
    "build": "yarn workspaces run build",
    "build:contracts": "yarn workspace @openavatar/types build && yarn workspace @openavatar/assets build && yarn workspace @openavatar/contracts build",
    "build:web": "yarn workspace @openavatar/types build && yarn workspace @openavatar/assets build && yarn workspace @openavatar/web build",
    "ci": "yarn clean && yarn build && yarn lint && yarn format:check && yarn test && yarn workspace @openavatar/web screenshot && yarn launch",
    "clean": "yarn workspaces run clean",
    "clean:build": "for sub in types assets contracts web; do yarn workspace @openavatar/$sub clean && yarn workspace @openavatar/$sub build; done",
    "clean:build:test": "for sub in types assets contracts web; do yarn workspace @openavatar/$sub clean && yarn workspace @openavatar/$sub build && yarn workspace @openavatar/$sub test || break; done",
    "coverage": "yarn workspaces run coverage",
    "dev": "yarn workspace @openavatar/web dev",
    "down": "docker compose down",
    "find": "./contracts/scripts/findCreate2SearchInput.sh",
    "fix": "yarn integ || (yarn fix:abi && yarn integ)",
    "fixup": "yarn fix && yarn start:ethereum",
    "fix:abi": "./contracts/artifacts/fix_abi.sh",
    "format": "yarn workspaces run format",
    "format:check": "yarn workspaces run format:check",
    "integ": "docker compose down && yarn mkgenesis && yarn relaunch && docker compose down",
    "launch": "docker compose up --force-recreate --remove-orphans --abort-on-container-exit launch",
    "launch:alpha": "NETWORK=alpha docker compose up --force-recreate --remove-orphans --abort-on-container-exit launch",
    "lint": "yarn workspaces run lint",
    "mkgenesis": "docker compose down && cd testnet && pwd && yarn mkgenesis",
    "regenesis": "docker compose down && cd testnet && pwd && yarn regenesis",
    "relaunch": "yarn regenesis && yarn launch",
    "restart:ethereum": "yarn mkgenesis && yarn regenesis && yarn start:ethereum",
    "start:alpha": "CHAIN_ID=6942 yarn mkgenesis && yarn relaunch && yarn start:ethereum",
    "start:ethereum": "docker compose up geth --force-recreate --remove-orphans --abort-on-container-exit",
    "start:hardhat": "yarn workspace @openavatar/contracts start:hardhat",
    "test": "yarn workspaces run test",
    "up": "docker compose up --force-recreate --remove-orphans --abort-on-container-exit",
    "wipe": "yarn wipe:dist && yarn wipe:node_modules",
    "wipe:dist": "rm -rf assets/dist contracts/dist types/dist",
    "wipe:node_modules": "rm -rf node_modules assets/node_modules contracts/node_modules types/node_modules web/node_modules"
  },
  "description": "OpenAvatar is an open source, onchain protocol for avatars",
  "repository": "git@github.com/stoooops/openavatar.git",
  "author": "Cory Gabrielsen (cory.eth)",
  "license": "GPL-3.0-or-later"
}
